Aula 01 - Cenario e Bolinha
	- Todos os codigos que eu criar o P5 vou adicionar em arquivos HTML nas respectivas pastas.
	- P5 JS WEB para desenvolver nosso jogo (Focado em java SCRIPT)
	- temos um canvas e um background
	- function background, colocamos um fundo preto com a função background.
	- opção references no ajuda. 
		- Aqui conseguimos os codigos que vamos utilizar.
		- Função Circle circle(300,200,20); Diametro é 2 x o raio.
		- mudando os eixos x e y vamos movimentando a bolinha
	- Utilizamos let par acriar variavel, algo novo, sempre usei var. 
	- Criei a variavel xBolinha += velocidadeXBolinha; e utilizei um somador diferente.
		- Esta variavel serve para movimentar a bolinha.
	- com parametros 300x e 200x a bolinha sempre vai iniciar no centro. 
	- Em resumo estamos utiliznado um emulador com funções javaScript porntas
	- Fizemos a bolinha movimentar com algumas variaveis.
	
Aula 02 - Cor do fundo
	- Nesta aula, aprendemos a trabalhar em um editor de texto chamado p5.js. Se quisermos alterar a cor do preview, qual função devemos usar?

	background();

Aula 03 - Velocidade da bolinha
	- Criamos 2 variáveis para movimentar os eixos x e y da bolinha, como ilustra o código abaixo:

	let velocidadeXBolinha = 6
	let velocidadeYBolinha = 6COPIAR CÓDIGO
	O que acontecerá se alterarmos os valores numéricos para 3, ao invés de 6, como mostra o código abaixo?

	let velocidadeXBolinha = 3
	let velocidadeYBolinha = 3	

	- A velocidade da bolinha diminuirá.

Aula 04 - Colisão com as bordas
	- Assim que tocar a borda a gente quer inverter a posição da bolinha
	- Na logica, se a bolinha tocar a borda a gente vai fazer algo com ela.
	- Criamos a logica para bater nas bordas da bolinha
		if(xBolinha > width || xBolinha < 0){
		     velocidadeXBolinha *= -1;
		     }
		  if(yBolinha > height || yBolinha < 0){
		     velocidadeYBolinha *= -1;
		     }
	- Lógica simples, onde construimos a movimentação sempre que bater nas extremidades, muda a direção da movimentação do eixo, isto ocorre com a multiplicação * -1.
	- width e heigth são as alturas e largura.

Aula 05 - Sintaxe do IF
	- Usamos as condicionais para realizar uma verificação de algum aspecto do código e executar uma ação.

	Qual é a sintaxe correta para escrevermos uma condicional, em programação na linguagem JavaScript, a fim de verificar se a posição da bolinha no eixo x é maior que a largura da tela?

	if (xBolinha > width) { }

Aula 06 - Comentários no código
	- Durante a aula aprendemos como fazer comentários (ou anotações) no nosso código. Se escrevermos uma parte do nosso código da seguinte maneira, o que acontecerá com o código ao executarmos?

	xBolinha += velocidadeXBolinha;
	//yBolinha += velocidadeYBolinha;

	A bolinha irá se mover apenas no eixo X, o eixo Y não será lido durante a execução, uma vez que está com um comentário.

Aula 07 - Raio e Diametro
	- O X vai ser sempre o centro do circulo.
	- Analisar sempre através do raio. 
	- Somar o raio ao eixo da bolinha para nao atravesar a bolinha
	- Com isto a bolinha reconhece as bordas da tela
		-let raio = diametro/2;
 		if(xBolinha + raio > width || xBolinha - raio < 0){
	     velocidadeXBolinha *= -1;
    	 }
  		if(yBolinha + raio > height || yBolinha - raio < 0){
     	velocidadeYBolinha *= -1;
     	}  

Aula 08 - Refatoração e funções
	-	criamos variavies para trornar nosso codigo mais claro e simples de entender.
	- draw
		- Criamos o circulo
		- criamos a movimentação da bolinha
		- Criamos a colisão das bordas
	- Deixar o codigo mais claro. Vamos colocar refatoração no nosso código
	- Criamos as funções:
		//variaveis da bolinha


				function mostraBolinha(){
				  circle(xBolinha, yBolinha, diametro);
				}

				function movimentaBolinha(){
				  xBolinha += velocidadeXBolinha;
				  yBolinha += velocidadeYBolinha;
				}

				function verificaColisaoBorda(){
				  if(xBolinha + raio > width || xBolinha - raio < 0){
				     velocidadeXBolinha *= -1;
				     }
				  if(yBolinha + raio > height || yBolinha - raio < 0){
				     velocidadeYBolinha *= -1;
				     }  

				  
				}


	- Para deixar o código mais claro para quem for ler.
	- Também comentamos quais variaveis pertencem a qual fluxo.

Aula 09 - Entendendo o P5.js e Draw();
	- O p5.js é uma biblioteca JavaScript voltada para tornar a programação acessível a artistas, designers e iniciantes. Ela oferece funções "pré-fabricadas" como draw() e setup() para facilitar a criação de código. A função draw() é essencial, agindo como um loop para desenhar e animar elementos na tela. O sistema de coordenadas ajuda a posicionar objetos. É uma ferramenta poderosa para criar arte e interações na web. Saiba mais na referência do p5.js.

	https://www.alura.com.br/artigos/p5-plano-cartesiano?_gl=1*1wwjbmn*_ga*MTA2Njc5NzMwNS4xNjc4Mjc2NDU2*_ga_1EPWSW3PCS*MTY5NTcyNDA3OC4xNS4xLjE2OTU3MjczMDEuMC4wLjA.*_fplc*NzVyTTZkMnlOOTYxbGgzczRHSGpiJTJGMFZjN2xrdlNSWHNzMWxoSkRxMmxMZ2hERCUyRkJsYkFSTTFTQ1d1c24wU1BxMXJ0YlV4SHJTWTFBcXJQWWc3VWtTU0xEUkRHZUY4JTJCeDVqa0FYbm4zJTJCRkppanFTQVRVNTVVTTgzSk0zRlElM0QlM0Q.
	https://p5js.org/reference/#/p5/draw
	https://p5js.org/

Aula 10 - Função na programação
	- Sem alterar o comportamento do jogo, movemos alguns códigos da função draw para funções que criamos:

	function mostraBolinha()

	function movimentaBolinha()

	function verificaColisaoBorda()

	Sabendo disso, podemos definir que função é:

	Um conjunto de comandos ou códigos que realiza uma tarefa específica.

Aula 11 - Faça como eu fiz na aula
	- Já fiz

Aula 12 - O que aprendemos?
	- Conhecemos o ambiente de desenvolvimento web P5 Js.

		Pintamos o cenário de preto alterando o valor do parâmetro da função background de 220 para 0

		Criamos a bolinha do jogo através da função circle

		Detectamos a colisão da bolinha com as bordas verificando a posição x e y

		Melhoramos o código criando anotações e funções sem alterar o comportamento do jogo

	- Proxima aula, vamos movimentar a raquete. 
